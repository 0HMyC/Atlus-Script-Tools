//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\..\AtlusScriptLibrary\MessageScriptLanguage\Compiler\Parser\MessageScriptLexer.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		OpenCode=1, CloseText=2, LineComment=3, Text=4, EmptyLine=5, MessageDialogTagId=6, 
		SelectionDialogTagId=7, CloseCode=8, OpenText=9, IntLiteral=10, Identifier=11, 
		Whitespace=12;
	public const int MessageScriptCode = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode"
	};

	public static readonly string[] ruleNames = {
		"OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "CloseCode", "OpenText", "IntLiteral", "Identifier", 
		"DecIntLiteral", "HexIntLiteral", "Letter", "JapaneseCharacter", "KanjiCharacter", 
		"HiraganaCharacter", "KatakanaCharacter", "Digit", "HexDigit", "HexLiteralPrefix", 
		"Sign", "Whitespace"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "CloseCode", "OpenText", "IntLiteral", "Identifier", 
		"Whitespace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\xE\xA6\b\x1\b\x1"+
		"\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b"+
		"\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF"+
		"\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\a\x4?\n\x4\f\x4\xE\x4"+
		"\x42\v\x4\x3\x4\x5\x4\x45\n\x4\x3\x4\x5\x4H\n\x4\x3\x4\x3\x4\x3\x5\x6"+
		"\x5M\n\x5\r\x5\xE\x5N\x3\x6\x6\x6R\n\x6\r\x6\xE\x6S\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\a\x5\a^\n\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3"+
		"\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x5\vn\n\v\x3\f\x3\f\x3\f\x6\fs\n\f\r"+
		"\f\xE\ft\x3\r\x5\rx\n\r\x3\r\x6\r{\n\r\r\r\xE\r|\x3\xE\x5\xE\x80\n\xE"+
		"\x3\xE\x3\xE\x6\xE\x84\n\xE\r\xE\xE\xE\x85\x3\xF\x3\xF\x5\xF\x8A\n\xF"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\x90\n\x10\x3\x11\x3\x11\x3\x12\x3"+
		"\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x5\x15\x9C\n\x15\x3\x16"+
		"\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3N\x2\x2\x19"+
		"\x4\x2\x3\x6\x2\x4\b\x2\x5\n\x2\x6\f\x2\a\xE\x2\b\x10\x2\t\x12\x2\n\x14"+
		"\x2\v\x16\x2\f\x18\x2\r\x1A\x2\x2\x1C\x2\x2\x1E\x2\x2 \x2\x2\"\x2\x2$"+
		"\x2\x2&\x2\x2(\x2\x2*\x2\x2,\x2\x2.\x2\x2\x30\x2\xE\x4\x2\x3\xF\x4\x2"+
		"\f\f\xF\xF\x4\x2]]__\x5\x2\v\f\xF\xF\"\"\x4\x2//\x61\x61\x4\x2\x43\\\x63"+
		"|\b\x2\x3003\x3003\x3007\x3008\x3026\x3026\x30FE\x30FE\xFF1E\xFF1E\xFF20"+
		"\xFF20\x3\x2\x4E02\x9FA2\x3\x2\x3043\x30F6\x3\x2\x30A3\x30F6\x3\x2\x32"+
		";\x4\x2\x43H\x63h\x4\x2ZZzz\x4\x2--//\xAC\x2\x4\x3\x2\x2\x2\x2\x6\x3\x2"+
		"\x2\x2\x2\b\x3\x2\x2\x2\x2\n\x3\x2\x2\x2\x2\f\x3\x2\x2\x2\x3\xE\x3\x2"+
		"\x2\x2\x3\x10\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x3\x14\x3\x2\x2\x2\x3\x16"+
		"\x3\x2\x2\x2\x3\x18\x3\x2\x2\x2\x3\x30\x3\x2\x2\x2\x4\x32\x3\x2\x2\x2"+
		"\x6\x36\x3\x2\x2\x2\b:\x3\x2\x2\x2\nL\x3\x2\x2\x2\fQ\x3\x2\x2\x2\xE]\x3"+
		"\x2\x2\x2\x10_\x3\x2\x2\x2\x12\x63\x3\x2\x2\x2\x14g\x3\x2\x2\x2\x16m\x3"+
		"\x2\x2\x2\x18r\x3\x2\x2\x2\x1Aw\x3\x2\x2\x2\x1C\x7F\x3\x2\x2\x2\x1E\x89"+
		"\x3\x2\x2\x2 \x8F\x3\x2\x2\x2\"\x91\x3\x2\x2\x2$\x93\x3\x2\x2\x2&\x95"+
		"\x3\x2\x2\x2(\x97\x3\x2\x2\x2*\x9B\x3\x2\x2\x2,\x9D\x3\x2\x2\x2.\xA0\x3"+
		"\x2\x2\x2\x30\xA2\x3\x2\x2\x2\x32\x33\a]\x2\x2\x33\x34\x3\x2\x2\x2\x34"+
		"\x35\b\x2\x2\x2\x35\x5\x3\x2\x2\x2\x36\x37\a_\x2\x2\x37\x38\x3\x2\x2\x2"+
		"\x38\x39\b\x3\x2\x2\x39\a\x3\x2\x2\x2:;\a\x31\x2\x2;<\a\x31\x2\x2<@\x3"+
		"\x2\x2\x2=?\n\x2\x2\x2>=\x3\x2\x2\x2?\x42\x3\x2\x2\x2@>\x3\x2\x2\x2@\x41"+
		"\x3\x2\x2\x2\x41\x44\x3\x2\x2\x2\x42@\x3\x2\x2\x2\x43\x45\a\xF\x2\x2\x44"+
		"\x43\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45G\x3\x2\x2\x2\x46H\a\f\x2\x2G"+
		"\x46\x3\x2\x2\x2GH\x3\x2\x2\x2HI\x3\x2\x2\x2IJ\b\x4\x3\x2J\t\x3\x2\x2"+
		"\x2KM\n\x3\x2\x2LK\x3\x2\x2\x2MN\x3\x2\x2\x2NO\x3\x2\x2\x2NL\x3\x2\x2"+
		"\x2O\v\x3\x2\x2\x2PR\t\x4\x2\x2QP\x3\x2\x2\x2RS\x3\x2\x2\x2SQ\x3\x2\x2"+
		"\x2ST\x3\x2\x2\x2TU\x3\x2\x2\x2UV\b\x6\x3\x2V\r\x3\x2\x2\x2WX\ao\x2\x2"+
		"XY\au\x2\x2Y^\ai\x2\x2Z[\a\x66\x2\x2[\\\an\x2\x2\\^\ai\x2\x2]W\x3\x2\x2"+
		"\x2]Z\x3\x2\x2\x2^\xF\x3\x2\x2\x2_`\au\x2\x2`\x61\ag\x2\x2\x61\x62\an"+
		"\x2\x2\x62\x11\x3\x2\x2\x2\x63\x64\a_\x2\x2\x64\x65\x3\x2\x2\x2\x65\x66"+
		"\b\t\x4\x2\x66\x13\x3\x2\x2\x2gh\a]\x2\x2hi\x3\x2\x2\x2ij\b\n\x4\x2j\x15"+
		"\x3\x2\x2\x2kn\x5\x1A\r\x2ln\x5\x1C\xE\x2mk\x3\x2\x2\x2ml\x3\x2\x2\x2"+
		"n\x17\x3\x2\x2\x2os\x5\x1E\xF\x2ps\x5(\x14\x2qs\t\x5\x2\x2ro\x3\x2\x2"+
		"\x2rp\x3\x2\x2\x2rq\x3\x2\x2\x2st\x3\x2\x2\x2tr\x3\x2\x2\x2tu\x3\x2\x2"+
		"\x2u\x19\x3\x2\x2\x2vx\x5.\x17\x2wv\x3\x2\x2\x2wx\x3\x2\x2\x2xz\x3\x2"+
		"\x2\x2y{\x5(\x14\x2zy\x3\x2\x2\x2{|\x3\x2\x2\x2|z\x3\x2\x2\x2|}\x3\x2"+
		"\x2\x2}\x1B\x3\x2\x2\x2~\x80\x5.\x17\x2\x7F~\x3\x2\x2\x2\x7F\x80\x3\x2"+
		"\x2\x2\x80\x81\x3\x2\x2\x2\x81\x83\x5,\x16\x2\x82\x84\x5*\x15\x2\x83\x82"+
		"\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x85\x83\x3\x2\x2\x2\x85\x86\x3\x2\x2"+
		"\x2\x86\x1D\x3\x2\x2\x2\x87\x8A\t\x6\x2\x2\x88\x8A\x5 \x10\x2\x89\x87"+
		"\x3\x2\x2\x2\x89\x88\x3\x2\x2\x2\x8A\x1F\x3\x2\x2\x2\x8B\x90\x5\"\x11"+
		"\x2\x8C\x90\x5$\x12\x2\x8D\x90\x5&\x13\x2\x8E\x90\t\a\x2\x2\x8F\x8B\x3"+
		"\x2\x2\x2\x8F\x8C\x3\x2\x2\x2\x8F\x8D\x3\x2\x2\x2\x8F\x8E\x3\x2\x2\x2"+
		"\x90!\x3\x2\x2\x2\x91\x92\t\b\x2\x2\x92#\x3\x2\x2\x2\x93\x94\t\t\x2\x2"+
		"\x94%\x3\x2\x2\x2\x95\x96\t\n\x2\x2\x96\'\x3\x2\x2\x2\x97\x98\t\v\x2\x2"+
		"\x98)\x3\x2\x2\x2\x99\x9C\x5(\x14\x2\x9A\x9C\t\f\x2\x2\x9B\x99\x3\x2\x2"+
		"\x2\x9B\x9A\x3\x2\x2\x2\x9C+\x3\x2\x2\x2\x9D\x9E\a\x32\x2\x2\x9E\x9F\t"+
		"\r\x2\x2\x9F-\x3\x2\x2\x2\xA0\xA1\t\xE\x2\x2\xA1/\x3\x2\x2\x2\xA2\xA3"+
		"\t\x4\x2\x2\xA3\xA4\x3\x2\x2\x2\xA4\xA5\b\x18\x3\x2\xA5\x31\x3\x2\x2\x2"+
		"\x14\x2\x3@\x44GNS]mrtw|\x7F\x85\x89\x8F\x9B\x5\a\x3\x2\b\x2\x2\x6\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
