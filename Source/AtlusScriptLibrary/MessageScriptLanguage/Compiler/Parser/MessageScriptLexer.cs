//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\..\AtlusScriptLibrary\MessageScriptLanguage\Compiler\Parser\MessageScriptLexer.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		OpenCode=1, CloseText=2, LineComment=3, Text=4, EmptyLine=5, MessageDialogTagId=6, 
		SelectionDialogTagId=7, SelectionDialogPatternId=8, CloseCode=9, OpenText=10, 
		IntLiteral=11, Identifier=12, Whitespace=13;
	public const int MessageScriptCode = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode"
	};

	public static readonly string[] ruleNames = {
		"OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "SelectionDialogPatternId", "CloseCode", "OpenText", 
		"IntLiteral", "Identifier", "DecIntLiteral", "HexIntLiteral", "Letter", 
		"JapaneseCharacter", "KanjiCharacter", "HiraganaCharacter", "KatakanaCharacter", 
		"Digit", "HexDigit", "HexLiteralPrefix", "Sign", "Whitespace"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "SelectionDialogPatternId", "CloseCode", "OpenText", 
		"IntLiteral", "Identifier", "Whitespace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\xF\xB3\b\x1\b\x1"+
		"\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b"+
		"\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF"+
		"\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x3\x2\x3\x2"+
		"\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\a\x4\x41"+
		"\n\x4\f\x4\xE\x4\x44\v\x4\x3\x4\x5\x4G\n\x4\x3\x4\x5\x4J\n\x4\x3\x4\x3"+
		"\x4\x3\x5\x6\x5O\n\x5\r\x5\xE\x5P\x3\x6\x6\x6T\n\x6\r\x6\xE\x6U\x3\x6"+
		"\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5\a`\n\a\x3\b\x3\b\x3\b\x3\b\x3"+
		"\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x5\to\n\t\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x5\f{\n\f\x3\r\x3\r\x3\r\x6\r\x80\n\r"+
		"\r\r\xE\r\x81\x3\xE\x5\xE\x85\n\xE\x3\xE\x6\xE\x88\n\xE\r\xE\xE\xE\x89"+
		"\x3\xF\x5\xF\x8D\n\xF\x3\xF\x3\xF\x6\xF\x91\n\xF\r\xF\xE\xF\x92\x3\x10"+
		"\x3\x10\x5\x10\x97\n\x10\x3\x11\x3\x11\x3\x11\x3\x11\x5\x11\x9D\n\x11"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x5\x16\xA9\n\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3"+
		"\x19\x3\x19\x3P\x2\x2\x1A\x4\x2\x3\x6\x2\x4\b\x2\x5\n\x2\x6\f\x2\a\xE"+
		"\x2\b\x10\x2\t\x12\x2\n\x14\x2\v\x16\x2\f\x18\x2\r\x1A\x2\xE\x1C\x2\x2"+
		"\x1E\x2\x2 \x2\x2\"\x2\x2$\x2\x2&\x2\x2(\x2\x2*\x2\x2,\x2\x2.\x2\x2\x30"+
		"\x2\x2\x32\x2\xF\x4\x2\x3\xF\x4\x2\f\f\xF\xF\x4\x2]]__\x5\x2\v\f\xF\xF"+
		"\"\"\x4\x2//\x61\x61\x4\x2\x43\\\x63|\b\x2\x3003\x3003\x3007\x3008\x3026"+
		"\x3026\x30FE\x30FE\xFF1E\xFF1E\xFF20\xFF20\x3\x2\x4E02\x9FA2\x3\x2\x3043"+
		"\x30F6\x3\x2\x30A3\x30F6\x3\x2\x32;\x4\x2\x43H\x63h\x4\x2ZZzz\x4\x2--"+
		"//\xBA\x2\x4\x3\x2\x2\x2\x2\x6\x3\x2\x2\x2\x2\b\x3\x2\x2\x2\x2\n\x3\x2"+
		"\x2\x2\x2\f\x3\x2\x2\x2\x3\xE\x3\x2\x2\x2\x3\x10\x3\x2\x2\x2\x3\x12\x3"+
		"\x2\x2\x2\x3\x14\x3\x2\x2\x2\x3\x16\x3\x2\x2\x2\x3\x18\x3\x2\x2\x2\x3"+
		"\x1A\x3\x2\x2\x2\x3\x32\x3\x2\x2\x2\x4\x34\x3\x2\x2\x2\x6\x38\x3\x2\x2"+
		"\x2\b<\x3\x2\x2\x2\nN\x3\x2\x2\x2\fS\x3\x2\x2\x2\xE_\x3\x2\x2\x2\x10\x61"+
		"\x3\x2\x2\x2\x12n\x3\x2\x2\x2\x14p\x3\x2\x2\x2\x16t\x3\x2\x2\x2\x18z\x3"+
		"\x2\x2\x2\x1A\x7F\x3\x2\x2\x2\x1C\x84\x3\x2\x2\x2\x1E\x8C\x3\x2\x2\x2"+
		" \x96\x3\x2\x2\x2\"\x9C\x3\x2\x2\x2$\x9E\x3\x2\x2\x2&\xA0\x3\x2\x2\x2"+
		"(\xA2\x3\x2\x2\x2*\xA4\x3\x2\x2\x2,\xA8\x3\x2\x2\x2.\xAA\x3\x2\x2\x2\x30"+
		"\xAD\x3\x2\x2\x2\x32\xAF\x3\x2\x2\x2\x34\x35\a]\x2\x2\x35\x36\x3\x2\x2"+
		"\x2\x36\x37\b\x2\x2\x2\x37\x5\x3\x2\x2\x2\x38\x39\a_\x2\x2\x39:\x3\x2"+
		"\x2\x2:;\b\x3\x2\x2;\a\x3\x2\x2\x2<=\a\x31\x2\x2=>\a\x31\x2\x2>\x42\x3"+
		"\x2\x2\x2?\x41\n\x2\x2\x2@?\x3\x2\x2\x2\x41\x44\x3\x2\x2\x2\x42@\x3\x2"+
		"\x2\x2\x42\x43\x3\x2\x2\x2\x43\x46\x3\x2\x2\x2\x44\x42\x3\x2\x2\x2\x45"+
		"G\a\xF\x2\x2\x46\x45\x3\x2\x2\x2\x46G\x3\x2\x2\x2GI\x3\x2\x2\x2HJ\a\f"+
		"\x2\x2IH\x3\x2\x2\x2IJ\x3\x2\x2\x2JK\x3\x2\x2\x2KL\b\x4\x3\x2L\t\x3\x2"+
		"\x2\x2MO\n\x3\x2\x2NM\x3\x2\x2\x2OP\x3\x2\x2\x2PQ\x3\x2\x2\x2PN\x3\x2"+
		"\x2\x2Q\v\x3\x2\x2\x2RT\t\x4\x2\x2SR\x3\x2\x2\x2TU\x3\x2\x2\x2US\x3\x2"+
		"\x2\x2UV\x3\x2\x2\x2VW\x3\x2\x2\x2WX\b\x6\x3\x2X\r\x3\x2\x2\x2YZ\ao\x2"+
		"\x2Z[\au\x2\x2[`\ai\x2\x2\\]\a\x66\x2\x2]^\an\x2\x2^`\ai\x2\x2_Y\x3\x2"+
		"\x2\x2_\\\x3\x2\x2\x2`\xF\x3\x2\x2\x2\x61\x62\au\x2\x2\x62\x63\ag\x2\x2"+
		"\x63\x64\an\x2\x2\x64\x11\x3\x2\x2\x2\x65\x66\av\x2\x2\x66g\aq\x2\x2g"+
		"o\ar\x2\x2hi\a\x64\x2\x2ij\aq\x2\x2jk\av\x2\x2kl\av\x2\x2lm\aq\x2\x2m"+
		"o\ao\x2\x2n\x65\x3\x2\x2\x2nh\x3\x2\x2\x2o\x13\x3\x2\x2\x2pq\a_\x2\x2"+
		"qr\x3\x2\x2\x2rs\b\n\x4\x2s\x15\x3\x2\x2\x2tu\a]\x2\x2uv\x3\x2\x2\x2v"+
		"w\b\v\x4\x2w\x17\x3\x2\x2\x2x{\x5\x1C\xE\x2y{\x5\x1E\xF\x2zx\x3\x2\x2"+
		"\x2zy\x3\x2\x2\x2{\x19\x3\x2\x2\x2|\x80\x5 \x10\x2}\x80\x5*\x15\x2~\x80"+
		"\t\x5\x2\x2\x7F|\x3\x2\x2\x2\x7F}\x3\x2\x2\x2\x7F~\x3\x2\x2\x2\x80\x81"+
		"\x3\x2\x2\x2\x81\x7F\x3\x2\x2\x2\x81\x82\x3\x2\x2\x2\x82\x1B\x3\x2\x2"+
		"\x2\x83\x85\x5\x30\x18\x2\x84\x83\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x85"+
		"\x87\x3\x2\x2\x2\x86\x88\x5*\x15\x2\x87\x86\x3\x2\x2\x2\x88\x89\x3\x2"+
		"\x2\x2\x89\x87\x3\x2\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x1D\x3\x2\x2\x2\x8B"+
		"\x8D\x5\x30\x18\x2\x8C\x8B\x3\x2\x2\x2\x8C\x8D\x3\x2\x2\x2\x8D\x8E\x3"+
		"\x2\x2\x2\x8E\x90\x5.\x17\x2\x8F\x91\x5,\x16\x2\x90\x8F\x3\x2\x2\x2\x91"+
		"\x92\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93\x1F\x3\x2"+
		"\x2\x2\x94\x97\t\x6\x2\x2\x95\x97\x5\"\x11\x2\x96\x94\x3\x2\x2\x2\x96"+
		"\x95\x3\x2\x2\x2\x97!\x3\x2\x2\x2\x98\x9D\x5$\x12\x2\x99\x9D\x5&\x13\x2"+
		"\x9A\x9D\x5(\x14\x2\x9B\x9D\t\a\x2\x2\x9C\x98\x3\x2\x2\x2\x9C\x99\x3\x2"+
		"\x2\x2\x9C\x9A\x3\x2\x2\x2\x9C\x9B\x3\x2\x2\x2\x9D#\x3\x2\x2\x2\x9E\x9F"+
		"\t\b\x2\x2\x9F%\x3\x2\x2\x2\xA0\xA1\t\t\x2\x2\xA1\'\x3\x2\x2\x2\xA2\xA3"+
		"\t\n\x2\x2\xA3)\x3\x2\x2\x2\xA4\xA5\t\v\x2\x2\xA5+\x3\x2\x2\x2\xA6\xA9"+
		"\x5*\x15\x2\xA7\xA9\t\f\x2\x2\xA8\xA6\x3\x2\x2\x2\xA8\xA7\x3\x2\x2\x2"+
		"\xA9-\x3\x2\x2\x2\xAA\xAB\a\x32\x2\x2\xAB\xAC\t\r\x2\x2\xAC/\x3\x2\x2"+
		"\x2\xAD\xAE\t\xE\x2\x2\xAE\x31\x3\x2\x2\x2\xAF\xB0\t\x4\x2\x2\xB0\xB1"+
		"\x3\x2\x2\x2\xB1\xB2\b\x19\x3\x2\xB2\x33\x3\x2\x2\x2\x15\x2\x3\x42\x46"+
		"IPU_nz\x7F\x81\x84\x89\x8C\x92\x96\x9C\xA8\x5\a\x3\x2\b\x2\x2\x6\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
