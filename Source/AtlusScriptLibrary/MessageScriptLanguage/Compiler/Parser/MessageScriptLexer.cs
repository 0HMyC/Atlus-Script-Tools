//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\..\AtlusScriptLibrary\MessageScriptLanguage\Compiler\Parser\MessageScriptLexer.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		OpenCode=1, CloseText=2, LineComment=3, Text=4, EmptyLine=5, MessageDialogTagId=6, 
		SelectionDialogTagId=7, SelectionDialogPatternId=8, CloseCode=9, OpenText=10, 
		IntLiteral=11, Identifier=12, Whitespace=13;
	public const int MessageScriptCode = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode"
	};

	public static readonly string[] ruleNames = {
		"OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "SelectionDialogPatternId", "CloseCode", "OpenText", 
		"IdentifierEscape", "IntLiteral", "Identifier", "DecIntLiteral", "HexIntLiteral", 
		"Letter", "Digit", "HexDigit", "HexLiteralPrefix", "Sign", "Whitespace"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OpenCode", "CloseText", "LineComment", "Text", "EmptyLine", "MessageDialogTagId", 
		"SelectionDialogTagId", "SelectionDialogPatternId", "CloseCode", "OpenText", 
		"IntLiteral", "Identifier", "Whitespace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\xF\xB2\b\x1\b\x1"+
		"\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b"+
		"\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF"+
		"\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\a\x4;\n\x4\f\x4\xE\x4>\v\x4\x3\x4\x5\x4\x41\n\x4"+
		"\x3\x4\x5\x4\x44\n\x4\x3\x4\x3\x4\x3\x5\x6\x5I\n\x5\r\x5\xE\x5J\x3\x6"+
		"\x6\x6N\n\x6\r\x6\xE\x6O\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5"+
		"\aZ\n\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3"+
		"\t\x5\ti\n\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\r\x3\r\x5\rx\n\r\x3\xE\x3\xE\x5\xE|\n\xE\x3\xE\x3\xE\x3\xE\a\xE\x81\n"+
		"\xE\f\xE\xE\xE\x84\v\xE\x3\xE\x3\xE\a\xE\x88\n\xE\f\xE\xE\xE\x8B\v\xE"+
		"\x3\xE\x3\xE\x5\xE\x8F\n\xE\x3\xF\x5\xF\x92\n\xF\x3\xF\x6\xF\x95\n\xF"+
		"\r\xF\xE\xF\x96\x3\x10\x5\x10\x9A\n\x10\x3\x10\x3\x10\x6\x10\x9E\n\x10"+
		"\r\x10\xE\x10\x9F\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x5\x13\xA8"+
		"\n\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3J\x2\x2\x17\x4\x2\x3\x6\x2\x4\b\x2\x5\n\x2\x6\f\x2\a\xE\x2\b\x10\x2"+
		"\t\x12\x2\n\x14\x2\v\x16\x2\f\x18\x2\x2\x1A\x2\r\x1C\x2\xE\x1E\x2\x2 "+
		"\x2\x2\"\x2\x2$\x2\x2&\x2\x2(\x2\x2*\x2\x2,\x2\xF\x4\x2\x3\v\x4\x2\f\f"+
		"\xF\xF\x4\x2]]__\x5\x2\v\f\xF\xF\"\"\x3\x2\x62\x62\x4\x2\x43\\\x63|\x3"+
		"\x2\x32;\x4\x2\x43H\x63h\x4\x2ZZzz\x4\x2--//\xBB\x2\x4\x3\x2\x2\x2\x2"+
		"\x6\x3\x2\x2\x2\x2\b\x3\x2\x2\x2\x2\n\x3\x2\x2\x2\x2\f\x3\x2\x2\x2\x3"+
		"\xE\x3\x2\x2\x2\x3\x10\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x3\x14\x3\x2\x2"+
		"\x2\x3\x16\x3\x2\x2\x2\x3\x1A\x3\x2\x2\x2\x3\x1C\x3\x2\x2\x2\x3,\x3\x2"+
		"\x2\x2\x4.\x3\x2\x2\x2\x6\x32\x3\x2\x2\x2\b\x36\x3\x2\x2\x2\nH\x3\x2\x2"+
		"\x2\fM\x3\x2\x2\x2\xEY\x3\x2\x2\x2\x10[\x3\x2\x2\x2\x12h\x3\x2\x2\x2\x14"+
		"j\x3\x2\x2\x2\x16n\x3\x2\x2\x2\x18r\x3\x2\x2\x2\x1Aw\x3\x2\x2\x2\x1C\x8E"+
		"\x3\x2\x2\x2\x1E\x91\x3\x2\x2\x2 \x99\x3\x2\x2\x2\"\xA1\x3\x2\x2\x2$\xA3"+
		"\x3\x2\x2\x2&\xA7\x3\x2\x2\x2(\xA9\x3\x2\x2\x2*\xAC\x3\x2\x2\x2,\xAE\x3"+
		"\x2\x2\x2./\a]\x2\x2/\x30\x3\x2\x2\x2\x30\x31\b\x2\x2\x2\x31\x5\x3\x2"+
		"\x2\x2\x32\x33\a_\x2\x2\x33\x34\x3\x2\x2\x2\x34\x35\b\x3\x2\x2\x35\a\x3"+
		"\x2\x2\x2\x36\x37\a\x31\x2\x2\x37\x38\a\x31\x2\x2\x38<\x3\x2\x2\x2\x39"+
		";\n\x2\x2\x2:\x39\x3\x2\x2\x2;>\x3\x2\x2\x2<:\x3\x2\x2\x2<=\x3\x2\x2\x2"+
		"=@\x3\x2\x2\x2><\x3\x2\x2\x2?\x41\a\xF\x2\x2@?\x3\x2\x2\x2@\x41\x3\x2"+
		"\x2\x2\x41\x43\x3\x2\x2\x2\x42\x44\a\f\x2\x2\x43\x42\x3\x2\x2\x2\x43\x44"+
		"\x3\x2\x2\x2\x44\x45\x3\x2\x2\x2\x45\x46\b\x4\x3\x2\x46\t\x3\x2\x2\x2"+
		"GI\n\x3\x2\x2HG\x3\x2\x2\x2IJ\x3\x2\x2\x2JK\x3\x2\x2\x2JH\x3\x2\x2\x2"+
		"K\v\x3\x2\x2\x2LN\t\x4\x2\x2ML\x3\x2\x2\x2NO\x3\x2\x2\x2OM\x3\x2\x2\x2"+
		"OP\x3\x2\x2\x2PQ\x3\x2\x2\x2QR\b\x6\x3\x2R\r\x3\x2\x2\x2ST\ao\x2\x2TU"+
		"\au\x2\x2UZ\ai\x2\x2VW\a\x66\x2\x2WX\an\x2\x2XZ\ai\x2\x2YS\x3\x2\x2\x2"+
		"YV\x3\x2\x2\x2Z\xF\x3\x2\x2\x2[\\\au\x2\x2\\]\ag\x2\x2]^\an\x2\x2^\x11"+
		"\x3\x2\x2\x2_`\av\x2\x2`\x61\aq\x2\x2\x61i\ar\x2\x2\x62\x63\a\x64\x2\x2"+
		"\x63\x64\aq\x2\x2\x64\x65\av\x2\x2\x65\x66\av\x2\x2\x66g\aq\x2\x2gi\a"+
		"o\x2\x2h_\x3\x2\x2\x2h\x62\x3\x2\x2\x2i\x13\x3\x2\x2\x2jk\a_\x2\x2kl\x3"+
		"\x2\x2\x2lm\b\n\x4\x2m\x15\x3\x2\x2\x2no\a]\x2\x2op\x3\x2\x2\x2pq\b\v"+
		"\x4\x2q\x17\x3\x2\x2\x2rs\a\x62\x2\x2st\a\x62\x2\x2t\x19\x3\x2\x2\x2u"+
		"x\x5\x1E\xF\x2vx\x5 \x10\x2wu\x3\x2\x2\x2wv\x3\x2\x2\x2x\x1B\x3\x2\x2"+
		"\x2y|\x5\"\x11\x2z|\a\x61\x2\x2{y\x3\x2\x2\x2{z\x3\x2\x2\x2|\x82\x3\x2"+
		"\x2\x2}\x81\x5\"\x11\x2~\x81\a\x61\x2\x2\x7F\x81\x5$\x12\x2\x80}\x3\x2"+
		"\x2\x2\x80~\x3\x2\x2\x2\x80\x7F\x3\x2\x2\x2\x81\x84\x3\x2\x2\x2\x82\x80"+
		"\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2\x83\x8F\x3\x2\x2\x2\x84\x82\x3\x2\x2"+
		"\x2\x85\x89\x5\x18\f\x2\x86\x88\n\x5\x2\x2\x87\x86\x3\x2\x2\x2\x88\x8B"+
		"\x3\x2\x2\x2\x89\x87\x3\x2\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x8C\x3\x2\x2"+
		"\x2\x8B\x89\x3\x2\x2\x2\x8C\x8D\x5\x18\f\x2\x8D\x8F\x3\x2\x2\x2\x8E{\x3"+
		"\x2\x2\x2\x8E\x85\x3\x2\x2\x2\x8F\x1D\x3\x2\x2\x2\x90\x92\x5*\x15\x2\x91"+
		"\x90\x3\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x94\x3\x2\x2\x2\x93\x95\x5$\x12"+
		"\x2\x94\x93\x3\x2\x2\x2\x95\x96\x3\x2\x2\x2\x96\x94\x3\x2\x2\x2\x96\x97"+
		"\x3\x2\x2\x2\x97\x1F\x3\x2\x2\x2\x98\x9A\x5*\x15\x2\x99\x98\x3\x2\x2\x2"+
		"\x99\x9A\x3\x2\x2\x2\x9A\x9B\x3\x2\x2\x2\x9B\x9D\x5(\x14\x2\x9C\x9E\x5"+
		"&\x13\x2\x9D\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2\x2\x2\x9F\x9D\x3\x2\x2\x2\x9F"+
		"\xA0\x3\x2\x2\x2\xA0!\x3\x2\x2\x2\xA1\xA2\t\x6\x2\x2\xA2#\x3\x2\x2\x2"+
		"\xA3\xA4\t\a\x2\x2\xA4%\x3\x2\x2\x2\xA5\xA8\x5$\x12\x2\xA6\xA8\t\b\x2"+
		"\x2\xA7\xA5\x3\x2\x2\x2\xA7\xA6\x3\x2\x2\x2\xA8\'\x3\x2\x2\x2\xA9\xAA"+
		"\a\x32\x2\x2\xAA\xAB\t\t\x2\x2\xAB)\x3\x2\x2\x2\xAC\xAD\t\n\x2\x2\xAD"+
		"+\x3\x2\x2\x2\xAE\xAF\t\x4\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xB1\b\x16\x3"+
		"\x2\xB1-\x3\x2\x2\x2\x16\x2\x3<@\x43JOYhw{\x80\x82\x89\x8E\x91\x96\x99"+
		"\x9F\xA7\x5\a\x3\x2\b\x2\x2\x6\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
