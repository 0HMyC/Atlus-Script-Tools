//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\..\AtlusScriptLibrary\MessageScriptLanguage\Compiler\Parser\MessageScriptLexer.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		OpenCode=1, CloseText=2, Text=3, MessageDialogTagId=4, SelectionDialogTagId=5, 
		CloseCode=6, OpenText=7, IntLiteral=8, Identifier=9, Whitespace=10;
	public const int MessageScriptCode = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode"
	};

	public static readonly string[] ruleNames = {
		"OpenCode", "CloseText", "Text", "MessageDialogTagId", "SelectionDialogTagId", 
		"CloseCode", "OpenText", "IntLiteral", "Identifier", "DecIntLiteral", 
		"HexIntLiteral", "Letter", "JapaneseCharacter", "KanjiCharacter", "HiraganaCharacter", 
		"KatakanaCharacter", "Digit", "HexDigit", "HexLiteralPrefix", "Sign", 
		"Whitespace"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OpenCode", "CloseText", "Text", "MessageDialogTagId", "SelectionDialogTagId", 
		"CloseCode", "OpenText", "IntLiteral", "Identifier", "Whitespace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\f\x8A\b\x1\b\x1"+
		"\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b"+
		"\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF"+
		"\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x4\x6\x4\x38\n\x4\r\x4\xE\x4\x39\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x5\x5\x42\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b"+
		"\x3\b\x3\b\x3\t\x3\t\x5\tR\n\t\x3\n\x3\n\x3\n\x6\nW\n\n\r\n\xE\nX\x3\v"+
		"\x5\v\\\n\v\x3\v\x6\v_\n\v\r\v\xE\v`\x3\f\x5\f\x64\n\f\x3\f\x3\f\x6\f"+
		"h\n\f\r\f\xE\fi\x3\r\x3\r\x5\rn\n\r\x3\xE\x3\xE\x3\xE\x3\xE\x5\xEt\n\xE"+
		"\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x5"+
		"\x13\x80\n\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x39\x2\x2\x17\x4\x2\x3\x6\x2\x4\b\x2\x5\n\x2\x6\f\x2\a\xE\x2"+
		"\b\x10\x2\t\x12\x2\n\x14\x2\v\x16\x2\x2\x18\x2\x2\x1A\x2\x2\x1C\x2\x2"+
		"\x1E\x2\x2 \x2\x2\"\x2\x2$\x2\x2&\x2\x2(\x2\x2*\x2\x2,\x2\f\x4\x2\x3\xE"+
		"\x4\x2]]__\x4\x2//\x61\x61\x4\x2\x43\\\x63|\b\x2\x3003\x3003\x3007\x3008"+
		"\x3026\x3026\x30FE\x30FE\xFF1E\xFF1E\xFF20\xFF20\x3\x2\x4E02\x9FA2\x3"+
		"\x2\x3043\x30F6\x3\x2\x30A3\x30F6\x3\x2\x32;\x4\x2\x43H\x63h\x4\x2ZZz"+
		"z\x4\x2--//\x5\x2\v\f\xF\xF\"\"\x8C\x2\x4\x3\x2\x2\x2\x2\x6\x3\x2\x2\x2"+
		"\x2\b\x3\x2\x2\x2\x3\n\x3\x2\x2\x2\x3\f\x3\x2\x2\x2\x3\xE\x3\x2\x2\x2"+
		"\x3\x10\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x3\x14\x3\x2\x2\x2\x3,\x3\x2\x2"+
		"\x2\x4.\x3\x2\x2\x2\x6\x32\x3\x2\x2\x2\b\x37\x3\x2\x2\x2\n\x41\x3\x2\x2"+
		"\x2\f\x43\x3\x2\x2\x2\xEG\x3\x2\x2\x2\x10K\x3\x2\x2\x2\x12Q\x3\x2\x2\x2"+
		"\x14V\x3\x2\x2\x2\x16[\x3\x2\x2\x2\x18\x63\x3\x2\x2\x2\x1Am\x3\x2\x2\x2"+
		"\x1Cs\x3\x2\x2\x2\x1Eu\x3\x2\x2\x2 w\x3\x2\x2\x2\"y\x3\x2\x2\x2${\x3\x2"+
		"\x2\x2&\x7F\x3\x2\x2\x2(\x81\x3\x2\x2\x2*\x84\x3\x2\x2\x2,\x86\x3\x2\x2"+
		"\x2./\a]\x2\x2/\x30\x3\x2\x2\x2\x30\x31\b\x2\x2\x2\x31\x5\x3\x2\x2\x2"+
		"\x32\x33\a_\x2\x2\x33\x34\x3\x2\x2\x2\x34\x35\b\x3\x2\x2\x35\a\x3\x2\x2"+
		"\x2\x36\x38\n\x2\x2\x2\x37\x36\x3\x2\x2\x2\x38\x39\x3\x2\x2\x2\x39:\x3"+
		"\x2\x2\x2\x39\x37\x3\x2\x2\x2:\t\x3\x2\x2\x2;<\ao\x2\x2<=\au\x2\x2=\x42"+
		"\ai\x2\x2>?\a\x66\x2\x2?@\an\x2\x2@\x42\ai\x2\x2\x41;\x3\x2\x2\x2\x41"+
		">\x3\x2\x2\x2\x42\v\x3\x2\x2\x2\x43\x44\au\x2\x2\x44\x45\ag\x2\x2\x45"+
		"\x46\an\x2\x2\x46\r\x3\x2\x2\x2GH\a_\x2\x2HI\x3\x2\x2\x2IJ\b\a\x3\x2J"+
		"\xF\x3\x2\x2\x2KL\a]\x2\x2LM\x3\x2\x2\x2MN\b\b\x3\x2N\x11\x3\x2\x2\x2"+
		"OR\x5\x16\v\x2PR\x5\x18\f\x2QO\x3\x2\x2\x2QP\x3\x2\x2\x2R\x13\x3\x2\x2"+
		"\x2SW\x5\x1A\r\x2TW\x5$\x12\x2UW\t\x3\x2\x2VS\x3\x2\x2\x2VT\x3\x2\x2\x2"+
		"VU\x3\x2\x2\x2WX\x3\x2\x2\x2XV\x3\x2\x2\x2XY\x3\x2\x2\x2Y\x15\x3\x2\x2"+
		"\x2Z\\\x5*\x15\x2[Z\x3\x2\x2\x2[\\\x3\x2\x2\x2\\^\x3\x2\x2\x2]_\x5$\x12"+
		"\x2^]\x3\x2\x2\x2_`\x3\x2\x2\x2`^\x3\x2\x2\x2`\x61\x3\x2\x2\x2\x61\x17"+
		"\x3\x2\x2\x2\x62\x64\x5*\x15\x2\x63\x62\x3\x2\x2\x2\x63\x64\x3\x2\x2\x2"+
		"\x64\x65\x3\x2\x2\x2\x65g\x5(\x14\x2\x66h\x5&\x13\x2g\x66\x3\x2\x2\x2"+
		"hi\x3\x2\x2\x2ig\x3\x2\x2\x2ij\x3\x2\x2\x2j\x19\x3\x2\x2\x2kn\t\x4\x2"+
		"\x2ln\x5\x1C\xE\x2mk\x3\x2\x2\x2ml\x3\x2\x2\x2n\x1B\x3\x2\x2\x2ot\x5\x1E"+
		"\xF\x2pt\x5 \x10\x2qt\x5\"\x11\x2rt\t\x5\x2\x2so\x3\x2\x2\x2sp\x3\x2\x2"+
		"\x2sq\x3\x2\x2\x2sr\x3\x2\x2\x2t\x1D\x3\x2\x2\x2uv\t\x6\x2\x2v\x1F\x3"+
		"\x2\x2\x2wx\t\a\x2\x2x!\x3\x2\x2\x2yz\t\b\x2\x2z#\x3\x2\x2\x2{|\t\t\x2"+
		"\x2|%\x3\x2\x2\x2}\x80\x5$\x12\x2~\x80\t\n\x2\x2\x7F}\x3\x2\x2\x2\x7F"+
		"~\x3\x2\x2\x2\x80\'\x3\x2\x2\x2\x81\x82\a\x32\x2\x2\x82\x83\t\v\x2\x2"+
		"\x83)\x3\x2\x2\x2\x84\x85\t\f\x2\x2\x85+\x3\x2\x2\x2\x86\x87\t\r\x2\x2"+
		"\x87\x88\x3\x2\x2\x2\x88\x89\b\x16\x4\x2\x89-\x3\x2\x2\x2\x10\x2\x3\x39"+
		"\x41QVX[`\x63ims\x7F\x5\a\x3\x2\x6\x2\x2\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
